{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/teranov/Desktop/proyectos/repuestos/node_modules/react-native-lazyload-deux/lib/LazyloadListView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport ListView from \"react-native-web/dist/exports/ListView\";\nimport ScrollableMixin from 'react-native-scrollable-mixin';\nimport LazyloadScrollView from \"./LazyloadScrollView\";\n\nvar LazyloadListView = function (_Component) {\n  _inherits(LazyloadListView, _Component);\n\n  var _super = _createSuper(LazyloadListView);\n\n  function LazyloadListView() {\n    _classCallCheck(this, LazyloadListView);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LazyloadListView, [{\n    key: \"refresh\",\n    value: function refresh() {\n      this._scrollView.refresh();\n    }\n  }, {\n    key: \"getScrollResponder\",\n    value: function getScrollResponder() {\n      return this._listView.getScrollResponder();\n    }\n  }, {\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      this._listView.setNativeProps(props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return this.props.name ? React.createElement(ListView, _extends({}, this.props, {\n        renderScrollComponent: function renderScrollComponent(props) {\n          return React.createElement(LazyloadScrollView, _extends({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 41\n            }\n          }));\n        },\n        ref: function ref(ele) {\n          return _this._listView = ele;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 32\n        }\n      })) : React.createElement(ListView, _extends({}, this.props, {\n        ref: function ref(ele) {\n          return _this._listView = ele;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 12\n        }\n      }));\n    }\n  }, {\n    key: \"scrollProperties\",\n    get: function get() {\n      return this._listView.scrollProperties;\n    }\n  }]);\n\n  return LazyloadListView;\n}(Component);\n\nLazyloadListView.displayName = 'LazyloadListView';\nLazyloadListView.propTypes = _objectSpread({}, ListView.propTypes);\nLazyloadListView.defaultProps = _objectSpread({}, ListView.defaultProps);\n\n_extends(LazyloadListView.prototype, ScrollableMixin);\n\nexport default LazyloadListView;","map":{"version":3,"sources":["/Users/teranov/Desktop/proyectos/repuestos/node_modules/react-native-lazyload-deux/lib/LazyloadListView.js"],"names":["PropTypes","React","Component","ScrollableMixin","LazyloadScrollView","LazyloadListView","_scrollView","refresh","_listView","getScrollResponder","props","setNativeProps","name","ele","scrollProperties","displayName","propTypes","ListView","defaultProps","prototype"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,OAAOC,eAAP,MAA4B,+BAA5B;AAEA,OAAOC,kBAAP;;IAEMC,gB;;;;;;;;;;;;;8BAWQ;AACR,WAAKC,WAAL,CAAiBC,OAAjB;AACD;;;yCAUoB;AACnB,aAAO,KAAKC,SAAL,CAAeC,kBAAf,EAAP;AACD;;;mCAEcC,K,EAAO;AACpB,WAAKF,SAAL,CAAeG,cAAf,CAA8BD,KAA9B;AACD;;;6BAEQ;AAAA;;AACP,aAAO,KAAKA,KAAL,CAAWE,IAAX,GAAkB,oBAAC,QAAD,eACnB,KAAKF,KADc;AAEvB,QAAA,qBAAqB,EAAE,+BAAAA,KAAK;AAAA,iBAAI,oBAAC,kBAAD,eAAwBA,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAJ;AAAA,SAFL;AAGvB,QAAA,GAAG,EAAE,aAAAG,GAAG;AAAA,iBAAI,KAAI,CAACL,SAAL,GAAiBK,GAArB;AAAA,SAHe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAlB,GAIF,oBAAC,QAAD,eACC,KAAKH,KADN;AAEH,QAAA,GAAG,EAAE,aAAAG,GAAG;AAAA,iBAAI,KAAI,CAACL,SAAL,GAAiBK,GAArB;AAAA,SAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJL;AAQD;;;wBAzBsB;AACrB,aAAO,KAAKL,SAAL,CAAeM,gBAAtB;AACD;;;;EAjB0BZ,S;;AAAzBG,gB,CACKU,W,GAAc,kB;AADnBV,gB,CAGKW,S,qBACFC,QAAQ,CAACD,S;AAJZX,gB,CAOKa,Y,qBACFD,QAAQ,CAACC,Y;;AAoClB,SAAcb,gBAAgB,CAACc,SAA/B,EAA0ChB,eAA1C;;AAEA,eAAeE,gBAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { ListView } from 'react-native';\nimport ScrollableMixin from 'react-native-scrollable-mixin';\n\nimport LazyloadScrollView from './LazyloadScrollView';\n\nclass LazyloadListView extends Component {\n    static displayName = 'LazyloadListView';\n\n    static propTypes = {\n      ...ListView.propTypes,\n    };\n\n    static defaultProps = {\n      ...ListView.defaultProps,\n    }\n\n    refresh() {\n      this._scrollView.refresh();\n    }\n\n    get scrollProperties() {\n      return this._listView.scrollProperties;\n    }\n\n    /**\n     * IMPORTANT: You must return the scroll responder of the underlying\n     * scrollable component from getScrollResponder() when using ScrollableMixin.\n     */\n    getScrollResponder() {\n      return this._listView.getScrollResponder();\n    }\n\n    setNativeProps(props) {\n      this._listView.setNativeProps(props);\n    }\n\n    render() {\n      return this.props.name ? <ListView\n        {...this.props}\n        renderScrollComponent={props => <LazyloadScrollView {...props} />}\n        ref={ele => this._listView = ele}\n      /> : <ListView\n        {...this.props}\n        ref={ele => this._listView = ele}\n      />;\n    }\n}\n\n// Mix in ScrollableMixin's methods as instance methods\nObject.assign(LazyloadListView.prototype, ScrollableMixin);\n\nexport default LazyloadListView;\n"]},"metadata":{},"sourceType":"module"}