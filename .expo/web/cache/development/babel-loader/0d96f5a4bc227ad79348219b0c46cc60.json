{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/teranov/Desktop/proyectos/repuestos/node_modules/react-native-lazyload-deux/lib/LazyloadScrollView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport ReactNative from \"react-native-web/dist/index\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ScrollableMixin from 'react-native-scrollable-mixin';\nimport LazyloadManager from \"./LazyloadManager\";\n\nvar LazyloadScrollView = function (_Component) {\n  _inherits(LazyloadScrollView, _Component);\n\n  var _super = _createSuper(LazyloadScrollView);\n\n  function LazyloadScrollView() {\n    var _this;\n\n    _classCallCheck(this, LazyloadScrollView);\n\n    _this = _super.call(this);\n\n    _this.componentWillUnmount = function () {\n      if (_this._manager) {\n        _this._manager.destroy();\n\n        _this._manager = null;\n      }\n    };\n\n    _this.getScrollResponder = function () {\n      return _this._scrollResponder;\n    };\n\n    _this.refresh = function () {\n      _this._onScroll({\n        nativeEvent: {\n          contentOffset: {\n            y: _this.currentPosition.y,\n            x: _this.currentPosition.x\n          }\n        }\n      });\n    };\n\n    _this._manager = null;\n    _this._scrollResponder = null;\n\n    _this._onLayout = function (e, node) {\n      _this.props.onLayout && _this.props.onLayout(e, node);\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n          width = _e$nativeEvent$layout.width,\n          height = _e$nativeEvent$layout.height;\n      var _this$props = _this.props,\n          name = _this$props.name,\n          renderDistance = _this$props.renderDistance,\n          recycle = _this$props.recycle,\n          recycleDistance = _this$props.recycleDistance;\n      _this._manager = new LazyloadManager({\n        name: name,\n        dimensions: {\n          width: width,\n          height: height\n        },\n        offset: renderDistance,\n        recycle: recycle ? recycleDistance : 0,\n        horizontal: _this.props.horizontal\n      }, ReactNative.findNodeHandle(_assertThisInitialized(_this)));\n    };\n\n    _this._onScroll = function (e) {\n      _this.props.onScroll && _this.props.onScroll(e);\n      var _e$nativeEvent$conten = e.nativeEvent.contentOffset,\n          x = _e$nativeEvent$conten.x,\n          y = _e$nativeEvent$conten.y;\n      _this.currentPosition = {\n        x: x,\n        y: y\n      };\n      _this._manager && _this._manager.calculate({\n        x: x,\n        y: y\n      });\n    };\n\n    _this.currentPosition = {\n      x: 0,\n      y: 0\n    };\n    return _this;\n  }\n\n  _createClass(LazyloadScrollView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return this.props.name ? React.createElement(ScrollView, _extends({}, this.props, {\n        ref: function ref(ele) {\n          return _this2._scrollResponder = ele;\n        },\n        name: null,\n        onScroll: this._onScroll,\n        onLayout: this._onLayout,\n        scrollEventThrottle: this.props.scrollEventThrottle || 16,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 32\n        }\n      })) : React.createElement(ScrollView, _extends({}, this.props, {\n        ref: function ref(ele) {\n          return _this2._scrollResponder = ele;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 12\n        }\n      }));\n    }\n  }]);\n\n  return LazyloadScrollView;\n}(Component);\n\nLazyloadScrollView.displayName = 'LazyloadScrollView';\nLazyloadScrollView.propTypes = _objectSpread({\n  name: PropTypes.string,\n  renderDistance: PropTypes.number,\n  recycle: PropTypes.bool,\n  recycleDistance: PropTypes.number,\n  horizontal: PropTypes.bool\n}, ScrollView.propTypes);\nLazyloadScrollView.defaultProps = {\n  renderDistance: 0,\n  recycle: true,\n  recycleDistance: Dimensions.get('window').height * 4,\n  horizontal: false\n};\n\n_extends(LazyloadScrollView.prototype, ScrollableMixin);\n\nexport default LazyloadScrollView;","map":{"version":3,"sources":["/Users/teranov/Desktop/proyectos/repuestos/node_modules/react-native-lazyload-deux/lib/LazyloadScrollView.js"],"names":["PropTypes","React","Component","ReactNative","ScrollableMixin","LazyloadManager","LazyloadScrollView","componentWillUnmount","_manager","destroy","getScrollResponder","_scrollResponder","refresh","_onScroll","nativeEvent","contentOffset","y","currentPosition","x","_onLayout","e","node","props","onLayout","layout","width","height","name","renderDistance","recycle","recycleDistance","dimensions","offset","horizontal","findNodeHandle","onScroll","calculate","ele","scrollEventThrottle","displayName","propTypes","string","number","bool","ScrollView","defaultProps","Dimensions","get","prototype"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport ReactNative, { ScrollView, Dimensions } from 'react-native';\nimport ScrollableMixin from 'react-native-scrollable-mixin';\n\nimport LazyloadManager from './LazyloadManager';\n\nclass LazyloadScrollView extends Component {\n    static displayName = 'LazyloadScrollView';\n\n    static propTypes = {\n      name: PropTypes.string,\n      renderDistance: PropTypes.number,\n      recycle: PropTypes.bool,\n      recycleDistance: PropTypes.number,\n      horizontal: PropTypes.bool,\n      ...ScrollView.propTypes,\n    };\n\n    static defaultProps = {\n      renderDistance: 0,\n      recycle: true,\n      recycleDistance: Dimensions.get('window').height * 4,\n      horizontal: false,\n    };\n\n\n    constructor() {\n      super();\n\n      // Used for saving scroll position when refreshing\n      this.currentPosition = {\n        x: 0,\n        y: 0,\n      };\n    }\n\n    componentWillUnmount = () => {\n      if (this._manager) {\n        this._manager.destroy();\n        this._manager = null;\n      }\n    };\n\n    getScrollResponder = () => this._scrollResponder;\n\n    refresh = () => {\n      this._onScroll({\n        nativeEvent: {\n          contentOffset: {\n            y: this.currentPosition.y,\n            x: this.currentPosition.x,\n          },\n        },\n      });\n    };\n\n    _manager = null;\n\n    _scrollResponder = null;\n\n    _onLayout = (e, node) => {\n      this.props.onLayout && this.props.onLayout(e, node);\n      const { width, height } = e.nativeEvent.layout;\n      const {\n        name,\n        renderDistance,\n        recycle,\n        recycleDistance,\n      } = this.props;\n\n      this._manager = new LazyloadManager(\n        {\n          name,\n          dimensions: {\n            width,\n            height,\n          },\n          offset: renderDistance,\n          recycle: recycle ? recycleDistance : 0,\n          horizontal: this.props.horizontal,\n        },\n        ReactNative.findNodeHandle(this)\n      );\n    };\n\n    _onScroll = (e) => {\n      this.props.onScroll && this.props.onScroll(e);\n      const { x, y } = e.nativeEvent.contentOffset;\n      this.currentPosition = { x, y };\n      this._manager && this._manager.calculate({ x, y });\n    };\n\n    render() {\n      return this.props.name ? <ScrollView\n        {...this.props}\n        ref={ele => this._scrollResponder = ele}\n        name={null}\n        onScroll={this._onScroll}\n        onLayout={this._onLayout}\n        scrollEventThrottle={this.props.scrollEventThrottle || 16}\n      /> : <ScrollView\n        {...this.props}\n        ref={ele => this._scrollResponder = ele}\n      />;\n    }\n}\n\nObject.assign(LazyloadScrollView.prototype, ScrollableMixin);\n\nexport default LazyloadScrollView;\n"]},"metadata":{},"sourceType":"module"}