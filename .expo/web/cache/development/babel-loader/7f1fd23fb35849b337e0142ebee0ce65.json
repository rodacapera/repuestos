{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/teranov/Desktop/proyectos/repuestos/node_modules/react-native-lazyload-deux/lib/LazyloadView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport LazyloadManager from \"./LazyloadManager\";\nimport Anim from \"./Anim\";\nvar id = 0;\n\nvar LazyloadView = function (_Component) {\n  _inherits(LazyloadView, _Component);\n\n  var _super = _createSuper(LazyloadView);\n\n  function LazyloadView() {\n    var _this;\n\n    _classCallCheck(this, LazyloadView);\n\n    _this = _super.apply(this, arguments);\n\n    _this.componentWillUnmount = function () {\n      if (_this.props.host) {\n        LazyloadManager.remove(_this.props.host, _this._id);\n      }\n\n      _this._unmounted = true;\n    };\n\n    _this.shouldComponentUpdate = function (nextProps) {\n      return _this._visible || !nextProps.host;\n    };\n\n    _this._root = null;\n    _this._visible = false;\n    _this._timeout = null;\n    _this._unmounted = false;\n\n    _this._toggle = function (visible) {\n      if (_this._visible !== visible) {\n        _this._visible = visible;\n        clearTimeout(_this._timeout);\n\n        if (_this.props.onVisibilityChange && typeof _this.props.onVisibilityChange === 'function') {\n          _this.props.onVisibilityChange(_this._visible, _this.ref, _this.props);\n        }\n\n        _this._timeout = setTimeout(function () {\n          if (_this._unmounted) {\n            return;\n          }\n\n          visible && _this.props.animation && LayoutAnimation.configureNext(_this.props.animation);\n\n          _this.setState({\n            visible: visible\n          });\n        }, 16);\n      }\n    };\n\n    _this.measureInWindow = function () {\n      var _this$_root;\n\n      (_this$_root = _this._root).measureInWindow.apply(_this$_root, arguments);\n    };\n\n    _this.measureLayout = function () {\n      if (_this._root) {\n        var _this$_root2;\n\n        (_this$_root2 = _this._root).measureLayout.apply(_this$_root2, arguments);\n      }\n    };\n\n    _this.setNativeProps = function () {\n      var _this$_root3;\n\n      (_this$_root3 = _this._root).setNativeProps.apply(_this$_root3, arguments);\n    };\n\n    _this.focus = function () {\n      var _this$_root4;\n\n      (_this$_root4 = _this._root).focus.apply(_this$_root4, arguments);\n    };\n\n    _this.blur = function () {\n      var _this$_root5;\n\n      (_this$_root5 = _this._root).blur.apply(_this$_root5, arguments);\n    };\n\n    _this._onLayout = function () {\n      var _this$props;\n\n      if (_this._unmounted) {\n        return;\n      }\n\n      _this.props.onLayout && (_this$props = _this.props).onLayout.apply(_this$props, arguments);\n      LazyloadManager.add({\n        name: _this.props.host,\n        id: _this._id\n      }, _this.measureLayout, _this._toggle);\n    };\n\n    if (_this.props.host) {\n      _this._id = id++;\n      _this._visible = _this.props.initialVisibility;\n      _this.state = {\n        visible: _this._visible\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(LazyloadView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return this.props.host ? React.createElement(View, _extends({}, this.props, {\n        ref: function ref(ele) {\n          return _this2._root = ele;\n        },\n        onLayout: this._onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 32\n        }\n      }), this.state.visible ? this.props.children : null) : React.createElement(View, _extends({\n        ref: function ref(ele) {\n          return _this2._root = ele;\n        }\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return LazyloadView;\n}(Component);\n\nLazyloadView.displayName = 'LazyloadView';\nLazyloadView.propTypes = _objectSpread({\n  host: PropTypes.string,\n  initialVisibility: PropTypes.bool,\n  animation: PropTypes.oneOfType([PropTypes.shape({\n    duration: PropTypes.number,\n    create: Anim,\n    update: Anim,\n    delete: Anim\n  }), PropTypes.bool])\n}, View.propTypes);\nLazyloadView.defaultProps = {\n  initialVisibility: false,\n  animation: {\n    duration: 350,\n    create: {\n      property: LayoutAnimation.Properties.opacity,\n      type: 'easeIn'\n    }\n  }\n};\nexport default LazyloadView;","map":{"version":3,"sources":["/Users/teranov/Desktop/proyectos/repuestos/node_modules/react-native-lazyload-deux/lib/LazyloadView.js"],"names":["PropTypes","React","Component","LazyloadManager","Anim","id","LazyloadView","arguments","componentWillUnmount","props","host","remove","_id","_unmounted","shouldComponentUpdate","nextProps","_visible","_root","_timeout","_toggle","visible","clearTimeout","onVisibilityChange","ref","setTimeout","animation","LayoutAnimation","configureNext","setState","measureInWindow","measureLayout","setNativeProps","focus","blur","_onLayout","onLayout","add","name","initialVisibility","state","ele","children","displayName","propTypes","string","bool","oneOfType","shape","duration","number","create","update","delete","View","defaultProps","property","Properties","opacity","type"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { View, LayoutAnimation } from 'react-native';\n\nimport LazyloadManager from './LazyloadManager';\nimport Anim from './Anim';\n\nlet id = 0;\n\nclass LazyloadView extends Component {\n    static displayName = 'LazyloadView';\n\n    static propTypes = {\n      host: PropTypes.string,\n      initialVisibility: PropTypes.bool,\n      animation: PropTypes.oneOfType([\n        PropTypes.shape({\n          duration: PropTypes.number,\n          create: Anim,\n          update: Anim,\n          delete: Anim,\n        }),\n        PropTypes.bool,\n      ]),\n      ...View.propTypes,\n    };\n\n    static defaultProps = {\n      initialVisibility: false,\n      animation: {\n        duration: 350,\n        create: {\n          property: LayoutAnimation.Properties.opacity,\n          type: 'easeIn',\n        },\n      },\n    };\n\n    constructor() {\n      super(...arguments);\n      if (this.props.host) {\n        this._id = id++;\n        this._visible = this.props.initialVisibility;\n        this.state = {\n          visible: this._visible,\n        };\n      }\n    }\n\n    componentWillUnmount = () => {\n      if (this.props.host) {\n        LazyloadManager.remove(this.props.host, this._id);\n      }\n      this._unmounted = true;\n    };\n\n    shouldComponentUpdate = (nextProps) => {\n      return this._visible || !nextProps.host;\n    };\n\n    _root = null;\n    _visible = false;\n    _timeout = null;\n    _unmounted = false;\n\n    _toggle = (visible) => {\n      if (this._visible !== visible) {\n        this._visible = visible;\n        clearTimeout(this._timeout);\n\n        // If we have a callback, call it with the visibility state change\n        if (this.props.onVisibilityChange && typeof this.props.onVisibilityChange === 'function') {\n          this.props.onVisibilityChange(this._visible, this.ref, this.props);\n        }\n\n        this._timeout = setTimeout(() => {\n          if (this._unmounted) {\n            return;\n          }\n\n          visible && this.props.animation && LayoutAnimation.configureNext(this.props.animation);\n          this.setState({\n            visible,\n          });\n        }, 16);\n      }\n    };\n\n    measureInWindow = (...args) => {\n      this._root.measureInWindow(...args);\n    };\n\n    measureLayout = (...args) => {\n      if (this._root) {\n        this._root.measureLayout(...args);\n      }\n    };\n\n    setNativeProps = (...args) => {\n      this._root.setNativeProps(...args);\n    };\n\n    focus = (...args) => {\n      this._root.focus(...args);\n    };\n\n    blur = (...args) => {\n      this._root.blur(...args);\n    };\n\n    _onLayout = (...args) => {\n      if (this._unmounted) {\n        return;\n      }\n      this.props.onLayout && this.props.onLayout(...args);\n      LazyloadManager.add(\n        {\n          name: this.props.host,\n          id: this._id,\n        },\n        this.measureLayout,\n        this._toggle\n      );\n    };\n\n    render() {\n      return this.props.host ? <View\n        {...this.props}\n        ref={ele => this._root = ele}\n        onLayout={this._onLayout}\n      >\n        {this.state.visible ? this.props.children : null}\n      </View> : <View\n        ref={ele => this._root = ele}\n        {...this.props}\n      />;\n    }\n}\n\nexport default LazyloadView;\n"]},"metadata":{},"sourceType":"module"}