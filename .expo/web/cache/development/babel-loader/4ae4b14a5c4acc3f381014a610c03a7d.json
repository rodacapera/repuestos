{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\n\nvar _default = function _default(container, measureLayout, toggle) {\n  var _this = this;\n\n  _classCallCheck(this, _default);\n\n  this._recycled = false;\n  this._visible = false;\n  this._horizontal = false;\n  this._bound = null;\n  this._recycle = null;\n  this._toggle = null;\n  this._sight = null;\n\n  this.move = function (x, y) {\n    if (!_this._sight) {\n      return;\n    }\n\n    var sight = _this._sight;\n    var bound = _this._bound;\n    var recycle = _this._recycle;\n    var scrolled = _this._horizontal ? x : y;\n\n    if (_this._recycled && scrolled >= bound.start && scrolled <= bound.end) {\n      _this._recycled = false;\n      _this._visible = true;\n\n      _this._toggle(true);\n    } else if (!_this._visible && scrolled >= sight.start && scrolled <= sight.end) {\n      _this._visible = true;\n\n      _this._toggle(true);\n    } else if (_this._visible && recycle && !_this._recycled) {\n      if (scrolled > bound.end || scrolled < bound.start) {\n        _this._recycled = true;\n        _this._visible = false;\n\n        _this._toggle(false);\n      }\n    }\n  };\n\n  var offset = container.offset,\n      _recycle = container.recycle,\n      horizontal = container.horizontal,\n      contentOffset = container.contentOffset,\n      dimensions = container.dimensions;\n  this._recycle = _recycle;\n  this._toggle = toggle;\n  this._horizontal = horizontal;\n\n  if (_recycle && offset >= _recycle) {\n    console.warn('Recycle distance should be much more than render distance.');\n    _recycle = offset;\n  }\n\n  measureLayout(container.data, function (x, y, width, height) {\n    var sightWidth = dimensions.width,\n        sightHeight = dimensions.height;\n    _this._sight = horizontal ? {\n      start: -(sightWidth - x + offset),\n      end: x + width + offset\n    } : {\n      start: -(sightHeight - y + offset),\n      end: y + height + offset\n    };\n\n    if (_recycle) {\n      _this._bound = horizontal ? {\n        start: -(_recycle + sightWidth - x),\n        end: x + width + _recycle\n      } : {\n        start: -(_recycle + sightHeight - y),\n        end: y + height + _recycle\n      };\n    }\n\n    _this.move(contentOffset.x, contentOffset.y);\n  });\n};\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/teranov/Desktop/proyectos/repuestos/node_modules/react-native-lazyload-deux/lib/LazyloadChild.js"],"names":["container","measureLayout","toggle","_recycled","_visible","_horizontal","_bound","_recycle","_toggle","_sight","move","x","y","sight","bound","recycle","scrolled","start","end","offset","horizontal","contentOffset","dimensions","console","warn","data","width","height","sightWidth","sightHeight"],"mappings":"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","sourcesContent":["export default class {\n  constructor(container, measureLayout, toggle) {\n    let { offset, recycle, horizontal, contentOffset, dimensions } = container;\n    this._recycle = recycle;\n    this._toggle = toggle;\n    this._horizontal = horizontal;\n    if (recycle && offset >= recycle) {\n      console.warn('Recycle distance should be much more than render distance.');\n      recycle = offset;\n    }\n\n    measureLayout(container.data, (x, y, width, height) => {\n      const { width: sightWidth, height: sightHeight } = dimensions;\n      this._sight = horizontal ? {\n        start: -(sightWidth - x + offset),\n        end: x + width + offset,\n      } : {\n        start: -(sightHeight - y + offset),\n        end: y + height + offset,\n      };\n      if (recycle) {\n        this._bound = horizontal ? {\n          start: -(recycle + sightWidth - x),\n          end: x + width + recycle,\n        } : {\n          start: -(recycle + sightHeight - y),\n          end: y + height + recycle,\n        };\n      }\n\n      this.move(contentOffset.x, contentOffset.y);\n    });\n  }\n\n    _recycled = false;\n    _visible = false;\n    _horizontal = false;\n    _bound = null;\n    _recycle = null;\n    _toggle = null;\n    _sight = null;\n\n    move = (x, y) => {\n      if (!this._sight) {\n        return;\n      }\n      const sight = this._sight;\n      const bound = this._bound;\n      const recycle = this._recycle;\n      const scrolled = this._horizontal ? x : y;\n\n      if (this._recycled && scrolled >= bound.start && scrolled <= bound.end) { // Recycled element back into recycle distance\n        this._recycled = false;\n        this._visible = true;\n        this._toggle(true);\n      } else if (!this._visible && scrolled >= sight.start && scrolled <= sight.end) { // Invisible element scroll into sight\n        this._visible = true;\n        this._toggle(true);\n      } else if (this._visible && recycle && !this._recycled) {\n        if (scrolled > bound.end || scrolled < bound.start) {\n          this._recycled = true;\n          this._visible = false;\n          this._toggle(false);\n        }\n      }\n    };\n}\n"]},"metadata":{},"sourceType":"module"}