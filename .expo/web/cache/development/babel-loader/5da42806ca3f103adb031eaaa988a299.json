{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport LazyloadChild from \"./LazyloadChild\";\nvar containers = {};\n\nvar LazyloadManager = function LazyloadManager(_ref, data) {\n  var _this = this;\n\n  var name = _ref.name,\n      dimensions = _ref.dimensions,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? 0 : _ref$offset,\n      recycle = _ref.recycle,\n      horizontal = _ref.horizontal,\n      _ref$contentOffset = _ref.contentOffset,\n      contentOffset = _ref$contentOffset === void 0 ? {\n    x: 0,\n    y: 0\n  } : _ref$contentOffset;\n\n  _classCallCheck(this, LazyloadManager);\n\n  this._name = null;\n\n  this.calculate = function (_ref2) {\n    var x = _ref2.x,\n        y = _ref2.y;\n    var container = containers[_this._name];\n    container.contentOffset = {\n      x: x,\n      y: y\n    };\n\n    if (container.count) {\n      var children = container.children;\n\n      for (var key in children) {\n        if (children.hasOwnProperty(key)) {\n          children[key].move(x, y);\n        }\n      }\n    }\n  };\n\n  this.destroy = function () {\n    _this._container = containers[_this._name] = null;\n  };\n\n  this._name = name;\n\n  if (!name || !dimensions) {}\n\n  var content = {\n    offset: offset,\n    recycle: recycle,\n    horizontal: horizontal,\n    contentOffset: contentOffset,\n    dimensions: dimensions,\n    data: data\n  };\n\n  if (!containers[name]) {\n    containers[name] = _objectSpread({\n      children: {},\n      count: 0,\n      uninitiated: []\n    }, content);\n  } else {\n    _extends(containers[name], content);\n  }\n\n  var uninitiated;\n\n  while (uninitiated = containers[name].uninitiated.pop()) {\n    uninitiated();\n  }\n};\n\nLazyloadManager.add = function (_ref3, measureLayout, toggle) {\n  var name = _ref3.name,\n      id = _ref3.id;\n  var container = containers[name];\n\n  if (!container) {\n    container = containers[name] = {\n      children: {},\n      count: 0,\n      contentOffset: {\n        x: 0,\n        y: 0\n      },\n      uninitiated: []\n    };\n  }\n\n  if (container.dimensions) {\n    if (!container.children[id]) {\n      container.count++;\n    }\n\n    container.children[id] = new LazyloadChild(container, measureLayout, toggle);\n  } else {\n    container.uninitiated.unshift(function () {\n      LazyloadManager.add({\n        name: name,\n        id: id\n      }, measureLayout, toggle);\n    });\n  }\n};\n\nLazyloadManager.remove = function (name, id) {\n  var container = containers[name];\n\n  if (container && container.children[id]) {\n    delete container.children[id];\n    container.count--;\n  }\n};\n\nexport default LazyloadManager;","map":{"version":3,"sources":["/Users/teranov/Desktop/proyectos/repuestos/node_modules/react-native-lazyload-deux/lib/LazyloadManager.js"],"names":["LazyloadChild","containers","LazyloadManager","data","name","dimensions","offset","recycle","horizontal","contentOffset","x","y","_name","calculate","container","count","children","key","hasOwnProperty","move","destroy","_container","content","uninitiated","pop","add","measureLayout","toggle","id","unshift","remove"],"mappings":"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","sourcesContent":["import LazyloadChild from './LazyloadChild';\n\nconst containers = {};\n\nclass LazyloadManager {\n    static add = ({ name, id }, measureLayout, toggle) => {\n      let container = containers[name];\n      if (!container) {\n        container = containers[name] = {\n          children: {},\n          count: 0,\n          contentOffset: { x: 0, y: 0 },\n          uninitiated: [],\n        };\n      }\n\n      if (container.dimensions) {\n        if (!container.children[id]) {\n          container.count++;\n        }\n\n        container.children[id] = new LazyloadChild(\n          container,\n          measureLayout,\n          toggle\n        );\n      } else {\n        container.uninitiated.unshift(() => {\n          LazyloadManager.add({ name, id }, measureLayout, toggle);\n        });\n      }\n    };\n\n    static remove = (name, id) => {\n      const container = containers[name];\n      if (container && container.children[id]) {\n        delete container.children[id];\n        container.count--;\n      }\n    };\n\n    constructor({ name, dimensions, offset = 0, recycle, horizontal, contentOffset = { x: 0, y: 0 } }, data) {\n      this._name = name;\n\n      if (!name || !dimensions) {\n\n      }\n\n      const content = {\n        offset,\n        recycle,\n        horizontal,\n        contentOffset,\n        dimensions,\n        data,\n      };\n      if (!containers[name]) {\n        containers[name] = {\n          children: {},\n          count: 0,\n          uninitiated: [],\n          ...content,\n        };\n      } else {\n        Object.assign(containers[name], content);\n      }\n\n      let uninitiated;\n      while (uninitiated = containers[name].uninitiated.pop()) {\n        uninitiated();\n      }\n    }\n\n    _name = null;\n\n    calculate = ({ x, y }) => {\n      const container = containers[this._name];\n\n      container.contentOffset = { x, y };\n      if (container.count) {\n        const children = container.children;\n        for (const key in children) {\n          if (children.hasOwnProperty(key)) {\n            children[key].move(x, y);\n          }\n        }\n      }\n    };\n\n\n    destroy = () => {\n      this._container = containers[this._name] = null;\n    };\n}\n\nexport default LazyloadManager;\n"]},"metadata":{},"sourceType":"module"}