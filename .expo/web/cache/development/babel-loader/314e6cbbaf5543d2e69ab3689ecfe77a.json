{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/teranov/Desktop/proyectos/repuestos/node_modules/react-native-lazyload/lib/LazyloadView.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component, PropTypes } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport LazyloadManager from \"./LazyloadManager\";\nimport Anim from \"./Anim\";\nvar id = 0;\n\nvar LazyloadView = function (_Component) {\n  _inherits(LazyloadView, _Component);\n\n  var _super = _createSuper(LazyloadView);\n\n  function LazyloadView() {\n    var _this;\n\n    _classCallCheck(this, LazyloadView);\n\n    _this = _super.apply(this, arguments);\n\n    _this.componentWillUnmount = function () {\n      if (_this.props.host) {\n        LazyloadManager.remove(_this.props.host, _this._id);\n      }\n\n      _this._unmounted = true;\n    };\n\n    _this.shouldComponentUpdate = function (nextProps) {\n      return _this._visible || !nextProps.host;\n    };\n\n    _this._root = null;\n    _this._visible = false;\n    _this._timeout = null;\n    _this._unmounted = false;\n\n    _this._toggle = function (visible) {\n      if (_this._visible !== visible) {\n        _this._visible = visible;\n        clearTimeout(_this._timeout);\n\n        if (_this.props.onVisibilityChange && typeof _this.props.onVisibilityChange === 'function') {\n          _this.props.onVisibilityChange(_this._visible, _this.ref, _this.props);\n        }\n\n        _this._timeout = setTimeout(function () {\n          if (_this._unmounted) {\n            return;\n          }\n\n          visible && _this.props.animation && LayoutAnimation.configureNext(_this.props.animation);\n\n          _this.setState({\n            visible: visible\n          });\n        }, 16);\n      }\n    };\n\n    _this.measureInWindow = function () {\n      var _this$_root;\n\n      (_this$_root = _this._root).measureInWindow.apply(_this$_root, arguments);\n    };\n\n    _this.measureLayout = function () {\n      var _this$_root2;\n\n      (_this$_root2 = _this._root).measureLayout.apply(_this$_root2, arguments);\n    };\n\n    _this.setNativeProps = function () {\n      var _this$_root3;\n\n      (_this$_root3 = _this._root).setNativeProps.apply(_this$_root3, arguments);\n    };\n\n    _this.focus = function () {\n      var _this$_root4;\n\n      (_this$_root4 = _this._root).focus.apply(_this$_root4, arguments);\n    };\n\n    _this.blur = function () {\n      var _this$_root5;\n\n      (_this$_root5 = _this._root).blur.apply(_this$_root5, arguments);\n    };\n\n    _this._onLayout = function () {\n      var _this$props;\n\n      if (_this._unmounted) {\n        return;\n      }\n\n      _this.props.onLayout && (_this$props = _this.props).onLayout.apply(_this$props, arguments);\n      LazyloadManager.add({\n        name: _this.props.host,\n        id: _this._id\n      }, _this.measureLayout, _this._toggle);\n    };\n\n    if (_this.props.host) {\n      _this._id = id++;\n      _this._visible = _this.props.initialVisibility;\n      _this.state = {\n        visible: _this._visible\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(LazyloadView, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return this.props.host ? React.createElement(View, _extends({}, this.props, {\n        ref: function ref(ele) {\n          return _this2._root = ele;\n        },\n        onLayout: this._onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 34\n        }\n      }), this.state.visible ? this.props.children : null) : React.createElement(View, _extends({\n        ref: function ref(ele) {\n          return _this2._root = ele;\n        }\n      }, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 19\n        }\n      }));\n    }\n  }]);\n\n  return LazyloadView;\n}(Component);\n\nLazyloadView.displayName = 'LazyloadView';\nLazyloadView.propTypes = _objectSpread({\n  host: PropTypes.string,\n  initialVisibility: PropTypes.bool,\n  animation: PropTypes.oneOfType([PropTypes.shape({\n    duration: PropTypes.number,\n    create: Anim,\n    update: Anim,\n    delete: Anim\n  }), PropTypes.bool])\n}, View.propTypes);\nLazyloadView.defaultProps = {\n  initialVisibility: false,\n  animation: {\n    duration: 350,\n    create: {\n      property: LayoutAnimation.Properties.opacity,\n      type: 'easeIn'\n    }\n  }\n};\nexport default LazyloadView;","map":{"version":3,"sources":["/Users/teranov/Desktop/proyectos/repuestos/node_modules/react-native-lazyload/lib/LazyloadView.js"],"names":["React","Component","PropTypes","LazyloadManager","Anim","id","LazyloadView","arguments","componentWillUnmount","props","host","remove","_id","_unmounted","shouldComponentUpdate","nextProps","_visible","_root","_timeout","_toggle","visible","clearTimeout","onVisibilityChange","ref","setTimeout","animation","LayoutAnimation","configureNext","setState","measureInWindow","measureLayout","setNativeProps","focus","blur","_onLayout","onLayout","add","name","initialVisibility","state","ele","children","displayName","propTypes","string","bool","oneOfType","shape","duration","number","create","update","delete","View","defaultProps","property","Properties","opacity","type"],"mappings":"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","sourcesContent":["import React, {\r\n    Component,\r\n    PropTypes\r\n} from 'react';\r\nimport {\r\n    View,\r\n    LayoutAnimation\r\n} from 'react-native';\r\nimport LazyloadManager from './LazyloadManager';\r\nimport Anim from './Anim';\r\n\r\nlet id = 0;\r\n\r\nclass LazyloadView extends Component{\r\n    static displayName = 'LazyloadView';\r\n\r\n    static propTypes = {\r\n        host: PropTypes.string,\r\n        initialVisibility: PropTypes.bool,\r\n        animation: PropTypes.oneOfType([\r\n            PropTypes.shape({\r\n                duration: PropTypes.number,\r\n                create: Anim,\r\n                update: Anim,\r\n                delete: Anim\r\n            }),\r\n            PropTypes.bool\r\n        ]),\r\n        ...View.propTypes\r\n    };\r\n\r\n    static defaultProps = {\r\n        initialVisibility: false,\r\n        animation: {\r\n            duration: 350,\r\n            create: {\r\n                property: LayoutAnimation.Properties.opacity,\r\n                type: 'easeIn'\r\n            }\r\n        }\r\n    };\r\n\r\n    constructor() {\r\n        super(...arguments);\r\n        if (this.props.host) {\r\n            this._id = id++;\r\n            this._visible = this.props.initialVisibility;\r\n            this.state = {\r\n                visible: this._visible\r\n            };\r\n        }\r\n    };\r\n\r\n    componentWillUnmount = () => {\r\n        if (this.props.host) {\r\n            LazyloadManager.remove(this.props.host, this._id);\r\n        }\r\n        this._unmounted = true;\r\n    };\r\n\r\n    shouldComponentUpdate = (nextProps) => {\r\n        return this._visible || !nextProps.host;\r\n    };\r\n\r\n    _root = null;\r\n    _visible = false;\r\n    _timeout = null;\r\n    _unmounted = false;\r\n\r\n    _toggle = visible => {\r\n        if (this._visible !== visible) {\r\n            this._visible = visible;\r\n            clearTimeout(this._timeout);\r\n\r\n            // If we have a callback, call it with the visibility state change\r\n            if (this.props.onVisibilityChange && typeof this.props.onVisibilityChange === 'function') {\r\n                this.props.onVisibilityChange(this._visible, this.ref, this.props);\r\n            }\r\n\r\n            this._timeout = setTimeout(() => {\r\n                if (this._unmounted) {\r\n                    return;\r\n                }\r\n\r\n                visible && this.props.animation && LayoutAnimation.configureNext(this.props.animation);\r\n                this.setState({\r\n                    visible\r\n                });\r\n            }, 16);\r\n        }\r\n    };\r\n\r\n    measureInWindow = (...args) => {\r\n        this._root.measureInWindow(...args);\r\n    };\r\n\r\n    measureLayout = (...args) => {\r\n        this._root.measureLayout(...args);\r\n    };\r\n\r\n    setNativeProps = (...args) => {\r\n        this._root.setNativeProps(...args);\r\n    };\r\n\r\n    focus = (...args) => {\r\n        this._root.focus(...args);\r\n    };\r\n\r\n    blur = (...args) => {\r\n        this._root.blur(...args);\r\n    };\r\n\r\n    _onLayout = (...args) => {\r\n        if (this._unmounted) {\r\n            return;\r\n        }\r\n        this.props.onLayout && this.props.onLayout(...args);\r\n        LazyloadManager.add(\r\n            {\r\n                name: this.props.host,\r\n                id: this._id\r\n            },\r\n            this.measureLayout,\r\n            this._toggle\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return this.props.host ? <View\r\n            {...this.props}\r\n            ref={ele => this._root = ele}\r\n            onLayout={this._onLayout}\r\n        >\r\n            {this.state.visible ? this.props.children : null}\r\n        </View> : <View\r\n            ref={ele => this._root = ele}\r\n            {...this.props}\r\n        />;\r\n    }\r\n}\r\n\r\nexport default LazyloadView;\r\n"]},"metadata":{},"sourceType":"module"}