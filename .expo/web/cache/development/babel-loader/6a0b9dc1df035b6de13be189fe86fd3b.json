{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/teranov/Desktop/proyectos/repuestos/src/modules/cart/containers/Cart.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { Container, Content, Card, CardItem, Body, Text, Button, Form, Item, Label, Input, Icon, Right } from 'native-base';\n\nvar Cart = function (_Component) {\n  _inherits(Cart, _Component);\n\n  var _super = _createSuper(Cart);\n\n  function Cart(props) {\n    var _this;\n\n    _classCallCheck(this, Cart);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      cartResult: [],\n      isLoadingResult: true\n    };\n    return _this;\n  }\n\n  _createClass(Cart, [{\n    key: \"getToCart\",\n    value: function getToCart() {\n      var value;\n      return _regeneratorRuntime.async(function getToCart$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@cart'));\n\n            case 2:\n              value = _context.sent;\n              console.log(JSON.parse(value));\n\n              if (value !== null) {\n                this.setState({\n                  cartResult: JSON.parse(value),\n                  isLoadingResult: false\n                });\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.getToCart();\n\n      if (this.state.isLoadingResult) {\n        return React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }\n        }, React.createElement(ActivityIndicator, {\n          size: \"large\",\n          color: \"red\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }\n        }));\n      }\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      }, React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, React.createElement(Card, {\n        style: {\n          flex: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, this.state.cartResult.map(function (products, i) {\n        return React.createElement(CardItem, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }\n        }, React.createElement(Image, {\n          source: {\n            uri: products.images[0].src\n          },\n          style: {\n            height: 50,\n            width: '100%',\n            flex: 1,\n            resizeMode: 'contain',\n            alignSelf: 'stretch'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 35\n          }\n        }), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 35\n          }\n        }, products.name), React.createElement(Right, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 35\n          }\n        }, React.createElement(Icon, {\n          name: \"arrow-forward\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 37\n          }\n        })));\n      }))));\n    }\n  }]);\n\n  return Cart;\n}(Component);\n\nexport { Cart as default };\nvar styles = StyleSheet.create({\n  bgGray: {\n    backgroundColor: '#00148A'\n  }\n});","map":{"version":3,"sources":["/Users/teranov/Desktop/proyectos/repuestos/src/modules/cart/containers/Cart.js"],"names":["React","Component","Container","Content","Card","CardItem","Body","Text","Button","Form","Item","Label","Input","Icon","Right","Cart","props","state","cartResult","isLoadingResult","AsyncStorage","getItem","value","console","log","JSON","parse","setState","getToCart","flex","map","products","i","uri","images","src","height","width","resizeMode","alignSelf","name","styles","StyleSheet","create","bgGray","backgroundColor"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;;AAEA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,QAAnC,EAA6CC,IAA7C,EAAmDC,IAAnD,EAAyDC,MAAzD,EAAiEC,IAAjE,EAAuEC,IAAvE,EAA6EC,KAA7E,EAAoFC,KAApF,EAA2FC,IAA3F,EAAiGC,KAAjG,QAA8G,aAA9G;;IAEqBC,I;;;;;AACjB,gBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAY;AACVC,MAAAA,UAAU,EAAE,EADF;AAEVC,MAAAA,eAAe,EAAE;AAFP,KAAZ;AAFc;AAMjB;;;;;;;;;;;+CAEuBC,YAAY,CAACC,OAAb,CAAqB,OAArB,C;;;AAAdC,cAAAA,K;AACNC,cAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAZ;;AACA,kBAAGA,KAAK,KAAK,IAAb,EAAmB;AACb,qBAAKK,QAAL,CAAc;AACXT,kBAAAA,UAAU,EAAEO,IAAI,CAACC,KAAL,CAAWJ,KAAX,CADD;AAEXH,kBAAAA,eAAe,EAAE;AAFN,iBAAd;AAIL;;;;;;;;;;;6BAEG;AACJ,WAAKS,SAAL;;AACA,UAAG,KAAKX,KAAL,CAAWE,eAAd,EAA8B;AAC1B,eACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,iBAAD;AAAmB,UAAA,IAAI,EAAC,OAAxB;AAAgC,UAAA,KAAK,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAKH;;AACD,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACU,UAAAA,IAAI,EAAE;AAAP,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKZ,KAAL,CAAWC,UAAX,CAAsBY,GAAtB,CAA0B,UAACC,QAAD,EAAUC,CAAV;AAAA,eACtB,oBAAC,QAAD;AAAW,UAAA,GAAG,EAAEA,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,KAAD;AAAO,UAAA,MAAM,EAAE;AAACC,YAAAA,GAAG,EAAEF,QAAQ,CAACG,MAAT,CAAgB,CAAhB,EAAmBC;AAAzB,WAAf;AAA8C,UAAA,KAAK,EAAE;AAACC,YAAAA,MAAM,EAAE,EAAT;AAAaC,YAAAA,KAAK,EAAE,MAApB;AAA4BR,YAAAA,IAAI,EAAE,CAAlC;AAAqCS,YAAAA,UAAU,EAAE,SAAjD;AAA4DC,YAAAA,SAAS,EAAE;AAAvE,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAOR,QAAQ,CAACS,IAAhB,CAFF,EAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,IAAD;AAAM,UAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAHF,CADsB;AAAA,OAA1B,CAFR,CADJ,CADJ,CADJ;AAmBH;;;;EA9C6BvC,S;;SAAbc,I;AAgDrB,IAAM0B,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,MAAM,EAAE;AACJC,IAAAA,eAAe,EAAE;AADb;AADuB,CAAlB,CAAf","sourcesContent":["import React, {Component} from 'react';\nimport { StyleSheet, View, Alert, Image, ActivityIndicator, AsyncStorage } from 'react-native';\nimport { Container, Content, Card, CardItem, Body, Text, Button, Form, Item, Label, Input, Icon, Right } from 'native-base';\n\nexport default class Cart extends Component {\n    constructor(props){\n        super(props);        \n        this.state ={\n          cartResult: [],\n          isLoadingResult: true\n        };\n    }\n    async getToCart(){\n        const value = await AsyncStorage.getItem('@cart');\n        console.log(JSON.parse(value));\n        if(value !== null) {\n              this.setState({\n                 cartResult: JSON.parse(value),\n                 isLoadingResult: false\n              });\n        }\n    }\n    render(){\n        this.getToCart();\n        if(this.state.isLoadingResult){\n            return(\n                <Container>\n                    <ActivityIndicator size=\"large\" color=\"red\" />   \n                </Container>      \n            )    \n        }\n        return(\n            <Container>\n                <Content>                 \n                    <Card style={{flex: 0}}>\n                        {\n                            this.state.cartResult.map((products,i) => (\n                                <CardItem  key={i}>\n                                  <Image source={{uri: products.images[0].src}} style={{height: 50, width: '100%', flex: 1, resizeMode: 'contain', alignSelf: 'stretch'}}/>\n                                  <Text>{products.name}</Text>\n                                  <Right>\n                                    <Icon name=\"arrow-forward\" />\n                                  </Right>\n                                </CardItem>\n                            ))  \n                        }                          \n                    </Card>                                         \n                </Content>\n            </Container>\n        )\n    }\n}\nconst styles = StyleSheet.create({\n  bgGray: {\n      backgroundColor: '#00148A',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}