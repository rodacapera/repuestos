{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/teranov/Desktop/proyectos/repuestos/src/modules/cart/containers/Cart.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nimport { Container, Content, Card, CardItem, Body, Text, Button, Form, Item, Label, Input, Icon, Right } from 'native-base';\n\nvar Cart = function (_Component) {\n  _inherits(Cart, _Component);\n\n  var _super = _createSuper(Cart);\n\n  function Cart() {\n    _classCallCheck(this, Cart);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Cart, [{\n    key: \"getToCart\",\n    value: function getToCart() {\n      var value;\n      return _regeneratorRuntime.async(function getToCart$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@cart'));\n\n            case 2:\n              value = _context.sent;\n              console.log(JSON.parse(value));\n              return _context.abrupt(\"return\", JSON.parse(value));\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var cart = function cart() {\n        var value = JSON.parse(AsyncStorage.getItem('@cart'));\n        console.log(value);\n        return React.createElement(Container, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 17\n          }\n        }, React.createElement(Content, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }\n        }, React.createElement(Card, {\n          style: {\n            flex: 0\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }\n        }, value.map(function (products, i) {\n          return React.createElement(CardItem, {\n            key: i,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 37\n            }\n          }, React.createElement(Image, {\n            source: {\n              uri: products.images[0].src\n            },\n            style: {\n              height: 50,\n              width: '100%',\n              flex: 1,\n              resizeMode: 'contain',\n              alignSelf: 'stretch'\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 39\n            }\n          }), React.createElement(Text, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 39\n            }\n          }, products.name), React.createElement(Right, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 39\n            }\n          }, React.createElement(Icon, {\n            name: \"arrow-forward\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 41\n            }\n          })));\n        }))));\n      };\n\n      return cart;\n    }\n  }]);\n\n  return Cart;\n}(Component);\n\nexport { Cart as default };","map":{"version":3,"sources":["/Users/teranov/Desktop/proyectos/repuestos/src/modules/cart/containers/Cart.js"],"names":["React","Component","Container","Content","Card","CardItem","Body","Text","Button","Form","Item","Label","Input","Icon","Right","Cart","AsyncStorage","getItem","value","console","log","JSON","parse","cart","flex","map","products","i","uri","images","src","height","width","resizeMode","alignSelf","name"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;;;;;;AAEA,SAASC,SAAT,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,QAAnC,EAA6CC,IAA7C,EAAmDC,IAAnD,EAAyDC,MAAzD,EAAiEC,IAAjE,EAAuEC,IAAvE,EAA6EC,KAA7E,EAAoFC,KAApF,EAA2FC,IAA3F,EAAiGC,KAAjG,QAA8G,aAA9G;;IAEqBC,I;;;;;;;;;;;;;;;;;;;;+CAEOC,YAAY,CAACC,OAAb,CAAqB,OAArB,C;;;AAAdC,cAAAA,K;AACNC,cAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAZ;+CACOG,IAAI,CAACC,KAAL,CAAWJ,KAAX,C;;;;;;;;;;;6BAEH;AACJ,UAAIK,IAAI,GAAG,SAAPA,IAAO,GAAK;AACZ,YAAML,KAAK,GAAGG,IAAI,CAACC,KAAL,CAAWN,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAd;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,eACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACM,YAAAA,IAAI,EAAE;AAAP,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEQN,KAAK,CAACO,GAAN,CAAU,UAACC,QAAD,EAAUC,CAAV;AAAA,iBACN,oBAAC,QAAD;AAAW,YAAA,GAAG,EAAEA,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,KAAD;AAAO,YAAA,MAAM,EAAE;AAACC,cAAAA,GAAG,EAAEF,QAAQ,CAACG,MAAT,CAAgB,CAAhB,EAAmBC;AAAzB,aAAf;AAA8C,YAAA,KAAK,EAAE;AAACC,cAAAA,MAAM,EAAE,EAAT;AAAaC,cAAAA,KAAK,EAAE,MAApB;AAA4BR,cAAAA,IAAI,EAAE,CAAlC;AAAqCS,cAAAA,UAAU,EAAE,SAAjD;AAA4DC,cAAAA,SAAS,EAAE;AAAvE,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOR,QAAQ,CAACS,IAAhB,CAFF,EAGE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAM,YAAA,IAAI,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAHF,CADM;AAAA,SAAV,CAFR,CADJ,CADJ,CADJ;AAmBH,OAtBD;;AAuBA,aAAOZ,IAAP;AACH;;;;EA/B6BtB,S;;SAAbc,I","sourcesContent":["import React, {Component} from 'react';\nimport { StyleSheet, View, Alert, Image, ActivityIndicator, AsyncStorage } from 'react-native';\nimport { Container, Content, Card, CardItem, Body, Text, Button, Form, Item, Label, Input, Icon, Right } from 'native-base';\n\nexport default class Cart extends Component {\n    async getToCart(){\n        const value = await AsyncStorage.getItem('@cart');\n        console.log(JSON.parse(value));\n        return JSON.parse(value);\n    }\n    render(){\n        let cart = () =>{\n            const value = JSON.parse(AsyncStorage.getItem('@cart'));\n            console.log(value);        \n            return(\n                <Container>\n                    <Content>                 \n                        <Card style={{flex: 0}}>\n                            {\n                                value.map((products,i) => (\n                                    <CardItem  key={i}>\n                                      <Image source={{uri: products.images[0].src}} style={{height: 50, width: '100%', flex: 1, resizeMode: 'contain', alignSelf: 'stretch'}}/>\n                                      <Text>{products.name}</Text>\n                                      <Right>\n                                        <Icon name=\"arrow-forward\" />\n                                      </Right>\n                                    </CardItem>\n                                ))  \n                            }                          \n                        </Card>                                         \n                    </Content>\n                </Container>\n            )\n        };\n        return(cart);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}