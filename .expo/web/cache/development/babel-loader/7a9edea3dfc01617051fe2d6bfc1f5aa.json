{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport LazyloadChild from \"./LazyloadChild\";\nvar containers = {};\n\nvar LazyloadManager = function LazyloadManager(_ref, data) {\n  var _this = this;\n\n  var name = _ref.name,\n      dimensions = _ref.dimensions,\n      _ref$offset = _ref.offset,\n      offset = _ref$offset === void 0 ? 0 : _ref$offset,\n      recycle = _ref.recycle,\n      horizontal = _ref.horizontal,\n      _ref$contentOffset = _ref.contentOffset,\n      contentOffset = _ref$contentOffset === void 0 ? {\n    x: 0,\n    y: 0\n  } : _ref$contentOffset;\n\n  _classCallCheck(this, LazyloadManager);\n\n  this._name = null;\n\n  this.calculate = function (_ref2) {\n    var x = _ref2.x,\n        y = _ref2.y;\n    var container = containers[_this._name];\n    container.contentOffset = {\n      x: x,\n      y: y\n    };\n\n    if (container.count) {\n      var children = container.children;\n\n      for (var key in children) {\n        if (children.hasOwnProperty(key)) {\n          children[key].move(x, y);\n        }\n      }\n    }\n  };\n\n  this.destroy = function () {\n    _this._container = containers[_this._name] = null;\n  };\n\n  this._name = name;\n\n  if (!name || !dimensions) {}\n\n  var content = {\n    offset: offset,\n    recycle: recycle,\n    horizontal: horizontal,\n    contentOffset: contentOffset,\n    dimensions: dimensions,\n    data: data\n  };\n\n  if (!containers[name]) {\n    containers[name] = _objectSpread({\n      children: {},\n      count: 0,\n      uninitiated: []\n    }, content);\n  } else {\n    _extends(containers[name], content);\n  }\n\n  var uninitiated;\n\n  while (uninitiated = containers[name].uninitiated.pop()) {\n    uninitiated();\n  }\n};\n\nLazyloadManager.add = function (_ref3, measureLayout, toggle) {\n  var name = _ref3.name,\n      id = _ref3.id;\n  var container = containers[name];\n\n  if (!container) {\n    container = containers[name] = {\n      children: {},\n      count: 0,\n      contentOffset: {\n        x: 0,\n        y: 0\n      },\n      uninitiated: []\n    };\n  }\n\n  if (container.dimensions) {\n    if (!container.children[id]) {\n      container.count++;\n    }\n\n    container.children[id] = new LazyloadChild(container, measureLayout, toggle);\n  } else {\n    container.uninitiated.unshift(function () {\n      LazyloadManager.add({\n        name: name,\n        id: id\n      }, measureLayout, toggle);\n    });\n  }\n};\n\nLazyloadManager.remove = function (name, id) {\n  var container = containers[name];\n\n  if (container && container.children[id]) {\n    delete container.children[id];\n    container.count--;\n  }\n};\n\nexport default LazyloadManager;","map":{"version":3,"sources":["/Users/teranov/Desktop/proyectos/repuestos/node_modules/react-native-lazyload/lib/LazyloadManager.js"],"names":["LazyloadChild","containers","LazyloadManager","data","name","dimensions","offset","recycle","horizontal","contentOffset","x","y","_name","calculate","container","count","children","key","hasOwnProperty","move","destroy","_container","content","uninitiated","pop","add","measureLayout","toggle","id","unshift","remove"],"mappings":"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","sourcesContent":["import LazyloadChild from './LazyloadChild';\r\n\r\nconst containers = {};\r\n\r\nclass LazyloadManager{\r\n    static add = ({name, id}, measureLayout, toggle) => {\r\n        let container = containers[name];\r\n        if (!container) {\r\n            container = containers[name] = {\r\n                children: {},\r\n                count: 0,\r\n                contentOffset: {x: 0, y: 0},\r\n                uninitiated: []\r\n            }\r\n        }\r\n\r\n        if (container.dimensions) {\r\n            if (!container.children[id]) {\r\n                container.count++;\r\n            }\r\n\r\n            container.children[id] = new LazyloadChild(\r\n                container,\r\n                measureLayout,\r\n                toggle\r\n            );\r\n        } else {\r\n            container.uninitiated.unshift(() => {\r\n                LazyloadManager.add({name, id}, measureLayout, toggle);\r\n            });\r\n        }\r\n    };\r\n\r\n    static remove = (name, id) => {\r\n        let container = containers[name];\r\n        if (container && container.children[id]) {\r\n            delete container.children[id];\r\n            container.count--;\r\n        }\r\n    };\r\n\r\n    constructor({name, dimensions, offset = 0, recycle, horizontal, contentOffset = {x: 0, y: 0}}, data) {\r\n        this._name = name;\r\n\r\n        if (!name || !dimensions) {\r\n\r\n        }\r\n\r\n        let content = {\r\n            offset,\r\n            recycle,\r\n            horizontal,\r\n            contentOffset,\r\n            dimensions,\r\n            data\r\n        };\r\n        if (!containers[name]) {\r\n            containers[name] = {\r\n                children: {},\r\n                count: 0,\r\n                uninitiated: [],\r\n                ...content\r\n            };\r\n        } else {\r\n            Object.assign(containers[name], content);\r\n        }\r\n\r\n        let uninitiated;\r\n        while (uninitiated = containers[name].uninitiated.pop()) {\r\n            uninitiated();\r\n        }\r\n    }\r\n\r\n    _name = null;\r\n\r\n    calculate = ({x, y}) => {\r\n        let container = containers[this._name];\r\n\r\n        container.contentOffset = {x, y};\r\n        if (container.count) {\r\n            let children = container.children;\r\n            for (let key in children) {\r\n                if (children.hasOwnProperty(key)) {\r\n                    children[key].move(x, y);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    destroy = () => {\r\n        this._container = containers[this._name] = null;\r\n    };\r\n}\r\n\r\nexport default LazyloadManager;\r\n"]},"metadata":{},"sourceType":"module"}